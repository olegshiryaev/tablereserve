# Generated by Django 5.0.6 on 2024-06-14 16:35

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import reservations.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cuisine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Наименование кухни')),
            ],
            options={
                'verbose_name': 'Кухня',
                'verbose_name_plural': 'Кухни',
            },
        ),
        migrations.CreateModel(
            name='Establishment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('rest', 'Ресторан'), ('cafe', 'Кафе'), ('bar', 'Бар')], max_length=10, verbose_name='Тип заведения')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('address', models.CharField(max_length=255, verbose_name='Адрес')),
                ('phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message="Номер телефона должен быть введен в формате: '+999999999'. Допустимо до 15 цифр.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Телефон')),
                ('website', models.URLField(blank=True, verbose_name='Веб-сайт')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('average_check', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Средний чек')),
                ('has_kids_room', models.BooleanField(default=False, verbose_name='Наличие детской комнаты')),
                ('capacity', models.IntegerField(default=0, verbose_name='Вместимость')),
                ('rating', models.DecimalField(decimal_places=2, default=0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='Рейтинг')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активное заведение')),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True, verbose_name='Уникальный идентификатор')),
                ('cuisines', models.ManyToManyField(blank=True, to='reservations.cuisine', verbose_name='Кухни')),
            ],
            options={
                'verbose_name': 'Заведение',
                'verbose_name_plural': 'Заведения',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название акции')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('start_date', models.DateField(verbose_name='Дата начала')),
                ('end_date', models.DateField(verbose_name='Дата окончания')),
                ('discount_percentage', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Процент скидки')),
                ('establishment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discounts', to='reservations.establishment')),
            ],
            options={
                'verbose_name': 'Скидка',
                'verbose_name_plural': 'Скидки',
            },
        ),
        migrations.CreateModel(
            name='EstablishmentImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=reservations.models.upload_to_instance_directory, verbose_name='Изображение')),
                ('is_cover', models.BooleanField(default=False, verbose_name='Обложка')),
                ('establishment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='reservations.establishment')),
            ],
        ),
        migrations.AddField(
            model_name='establishment',
            name='cover_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cover_for', to='reservations.establishmentimage'),
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название мероприятия')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('date', models.DateField(verbose_name='Дата')),
                ('start_time', models.TimeField(verbose_name='Время начала')),
                ('end_time', models.TimeField(verbose_name='Время окончания')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активное мероприятие')),
                ('establishment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='reservations.establishment')),
            ],
            options={
                'verbose_name': 'Мероприятие',
                'verbose_name_plural': 'Мероприятия',
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название меню')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('establishment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menus', to='reservations.establishment')),
            ],
            options={
                'verbose_name': 'Меню',
                'verbose_name_plural': 'Меню',
            },
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название блюда')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('image', models.ImageField(blank=True, null=True, upload_to='menu_images/', verbose_name='Изображение')),
                ('is_available', models.BooleanField(default=True, verbose_name='Доступно')),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='reservations.menu')),
            ],
            options={
                'verbose_name': 'Пункт меню',
                'verbose_name_plural': 'Пункты меню',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_approved', models.BooleanField(default=False, verbose_name='Одобрен')),
                ('is_spam', models.BooleanField(default=False, verbose_name='Спам')),
                ('is_inappropriate', models.BooleanField(default=False, verbose_name='Неуместный')),
                ('establishment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='reservations.establishment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReviewImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='review_images/', verbose_name='Изображение')),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='reservations.review')),
            ],
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=10, verbose_name='Номер столика')),
                ('capacity', models.IntegerField(default=4, verbose_name='Вместимость')),
                ('establishment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tables', to='reservations.establishment')),
            ],
            options={
                'verbose_name': 'Столик',
                'verbose_name_plural': 'Столики',
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата бронирования')),
                ('time', models.TimeField(verbose_name='Время бронирования')),
                ('num_people', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Количество людей')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('establishment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reservations.establishment', verbose_name='Заведение')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('table', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='reservations.table', verbose_name='Столик')),
            ],
            options={
                'verbose_name': 'Бронирование',
                'verbose_name_plural': 'Бронирования',
                'ordering': ['-date', '-time'],
            },
        ),
        migrations.CreateModel(
            name='WorkSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekday', models.CharField(choices=[('MON', 'Понедельник'), ('TUE', 'Вторник'), ('WED', 'Среда'), ('THU', 'Четверг'), ('FRI', 'Пятница'), ('SAT', 'Суббота'), ('SUN', 'Воскресенье')], max_length=3, verbose_name='День недели')),
                ('opening_time', models.TimeField(validators=[django.core.validators.MinValueValidator('00:00:00'), django.core.validators.MaxValueValidator('23:59:59')], verbose_name='Время открытия')),
                ('closing_time', models.TimeField(validators=[django.core.validators.MinValueValidator('00:00:00'), django.core.validators.MaxValueValidator('23:59:59')], verbose_name='Время закрытия')),
                ('is_closed', models.BooleanField(default=False, verbose_name='Закрыто')),
                ('establishment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reservations.establishment')),
            ],
            options={
                'verbose_name': 'Расписание работы',
                'verbose_name_plural': 'Расписания работы',
            },
        ),
    ]
